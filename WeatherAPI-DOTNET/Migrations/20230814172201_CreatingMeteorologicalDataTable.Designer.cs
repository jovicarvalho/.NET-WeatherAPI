// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using WeatherAPI_DOTNET.Context;

#nullable disable

namespace WeatherAPI_DOTNET.Migrations
{
    [DbContext(typeof(MeteorologicalDataContext))]
    [Migration("20230814172201_CreatingMeteorologicalDataTable")]
    partial class CreatingMeteorologicalDataTable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("WeatherAPI_DOTNET.Models.MeteorologicalDataEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(35)
                        .HasColumnType("character varying(35)");

                    b.Property<int>("MaxTemperature")
                        .HasColumnType("integer");

                    b.Property<int>("MinTemperature")
                        .HasColumnType("integer");

                    b.Property<string>("MorningWeather")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("NightWeather")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Precipitation")
                        .HasColumnType("integer");

                    b.Property<DateTime>("WeatherDate")
                        .HasColumnType("date");

                    b.Property<int>("WindSpeed")
                        .HasColumnType("integer");

                    b.Property<int>("humidity")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("MeteorologicalData");
                });
#pragma warning restore 612, 618
        }
    }
}
